1.CREATE OR REPLACE VIEW V_DRUZYNY
(D_NAZWA,LICZBA_PILKARZY,SREDNI_ROK_URODZENIA)
AS 
	SELECT D_NAZWA,COUNT(D_ID),ROUND(AVG(Z_ROK_URODZENIA),2)
	FROM DRUZYNY JOIN ZAWODNICY USING (D_ID)
	GROUP BY D_NAZWA
	
SELECT * FROM V_DRUZYNY ORDER BY D_NAZWA;

2.
CREATE OR REPLACE FUNCTION SREDNI_ROK_URODZENIA(P_K_SYMBOL VARCHAR)
RETURNS NUMERIC AS $$

SELECT ROUND(AVG(ZAWODNICY.Z_ROK_URODZENIA),2) AS SREDNI_ROK_URODZENIA
FROM ((ZAWODNICY 
INNER JOIN DRUZYNY ON ZAWODNICY.D_ID = DRUZYNY.D_ID)
INNER JOIN KRAJE ON DRUZYNY.K_SYMBOL = KRAJE.K_SYMBOL)
WHERE P_K_SYMBOL = KRAJE.K_SYMBOL
GROUP BY DRUZYNY.K_SYMBOL

$$ LANGUAGE SQL;
3.
DROP FUNCTION INFORMACJE_O_DRUZYNIE;
CREATE OR REPLACE FUNCTION INFORMACJE_O_DRUZYNIE (P_FRAGMENT_NAZWY varchar)
RETURNS NUMERIC AS $$
DECLARE
K_INF CURSOR (P_FRAGMENT_NAZWY varchar)
FOR SELECT D.D_NAZWA,D.D_STADION,K.K_NAZWA FROM DRUZYNY D JOIN KRAJE K ON
 K.K_SYMBOL=D.K_SYMBOL WHERE D.D_NAZWA LIKE CONCAT('%',P_FRAGMENT_NAZWY,'%');
V_LICZNIK NUMERIC := 0;
V_D_NAZWA DRUZYNY.D_NAZWA%TYPE;
V_D_STADION DRUZYNY.D_STADION%TYPE;
V_K_NAZWA KRAJE.K_NAZWA%TYPE;
BEGIN
OPEN K_INF(P_FRAGMENT_NAZWY);
LOOP

FETCH K_INF INTO V_D_NAZWA,V_D_STADION,V_K_NAZWA;
EXIT WHEN NOT FOUND;
RAISE NOTICE 'Nazwa: %, stadion: % ,kraj: %',V_D_NAZWA,V_D_STADION,V_K_NAZWA;
V_LICZNIK=V_LICZNIK +1;


END LOOP;
IF (V_LICZNIK=0)THEN
RAISE NOTICE 'Niczego nie znaleziono';
END IF;
CLOSE K_INF;
RETURN V_LICZNIK;

END; $$ LANGUAGE plpgsql;

4.
DROP FUNCTION INFORMACJE_O_DRUZYNIE;
CREATE OR REPLACE FUNCTION INFORMACJE_O_DRUZYNIE(P_LICZBA_ZAWODNIKOW INT)
	RETURNS NUMERIC AS $$
DECLARE 
	V_D_NAZWA DRUZYNY.D_NAZWA%TYPE;
	V_D_STADION DRUZYNY.D_STADION%TYPE;
	V_K_NAZWA KRAJE.K_NAZWA%TYPE;
	V_ZMIENNA RECORD;
BEGIN

SELECT D.D_NAZWA,COUNT(Z.D_ID) INTO STRICT V_ZMIENNA 
FROM ZAWODNICY Z FULL JOIN DRUZYNY D
	ON D.D_ID = Z.D_ID 
	GROUP BY D.D_NAZWA
	HAVING COUNT(Z.D_ID)=P_LICZBA_ZAWODNIKOW ;
	
	 SELECT D.D_NAZWA,D.D_STADION,K.K_NAZWA
		INTO V_D_NAZWA,V_D_STADION,V_K_NAZWA FROM DRUZYNY D 
		JOIN KRAJE K ON K.K_SYMBOL = D.K_SYMBOL
		WHERE D.D_NAZWA = V_ZMIENNA.D_NAZWA;
	
	
	
	RAISE NOTICE 'Nazwa:% ,stadion: % ,kraj: %',V_K_NAZWA,V_D_STADION,
	V_D_NAZWA;

	EXCEPTION
		WHEN no_data_found THEN
		 RAISE NOTICE 'Brak druzyny o liczbie zawodnikow %',
			P_LICZBA_ZAWODNIKOW;
		WHEN too_many_rows THEN 
		 RAISE NOTICE 'Zbyt wiele druzyn o liczbie zawodnikow %',
		 P_LICZBA_ZAWODNIKOW;
		 WHEN OTHERS THEN
		  RAISE NOTICE ' Wystapil inny blad';
		 
END; $$ LANGUAGE plpgsql;

5.
CREATE OR REPLACE FUNCTION ZNACZENIE_DRUZYNY_W_KRAJU(P_D_ID NUMERIC)
	RETURNS NUMERIC AS $$
DECLARE 
	V_ZMIENNA NUMERIC;
	
BEGIN
	SELECT COUNT(Z.D_ID) INTO V_ZMIENNA
	FROM ZAWODNICY Z FULL JOIN DRUZYNY D
	ON D.D_ID=Z.D_ID
	GROUP BY D.D_NAZWA
	HAVING COUNT(Z.D_ID)=P_D_ID ;

	SELECT ROUND((V_ZMIENNA)/(COUNT(Z_ID)),2) FROM ZAWODNICY;

		IF (V_ZMIENNA = 0) THEN
			RETURN 1;
		END IF;
	 

	RAISE EXCEPTION USING
		 MESSAGE='Niepoprawna wartosc parametru p_d_id',
		 HINT='Sprawdz identyfikatory w tabeli druzyny';

END; $$ LANGUAGE plpgsql;